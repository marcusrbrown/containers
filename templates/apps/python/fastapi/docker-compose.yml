services:
  {{ app_name }}:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: {{ app_name }}
        PORT: {{ port }}
        DEBUG: {{ debug }}
    container_name: {{ app_name }}-api
    restart: unless-stopped
    ports:
      - "{{ port }}:{{ port }}"
    environment:
      - DATABASE_URL={{ database_url }}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY={{ secret_key }}
      - DEBUG={{ debug }}
      - CORS_ORIGINS={{ cors_origins | join(',') }}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - {{ app_name }}-network
    healthcheck:
      test: ["CMD", "python", "/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  postgres:
    image: postgres:15-alpine@sha256:52af010baaeb34a287e7b5ea9696720727bd5bace64f9c18068ee187a6d6a4b2
    container_name: {{ app_name }}-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB={{ app_name }}
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - {{ app_name }}-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d {{ app_name }}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine@sha256:7a7c6b5c49a6896d0a58ee0c6dc0dcabe14f30f0a2f7d2d1362d276fa2d43166
    container_name: {{ app_name }}-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - {{ app_name }}-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine@sha256:56c93b2a17e185519a5f420173f899783f0890da60463011c59ddbb904f02093
    container_name: {{ app_name }}-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - {{ app_name }}
    networks:
      - {{ app_name }}-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  {{ app_name }}-network:
    driver: bridge
