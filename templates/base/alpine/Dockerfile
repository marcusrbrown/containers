# syntax=docker/dockerfile:1.17.1@sha256:38387523653efa0039f8e1c89bb74a30504e76ee9f565e25c9a09841f9427b05
# Alpine Linux Base Template
# Generated by Container Template Engine at {{ generated_at }}

ARG ALPINE_VERSION={{ alpine_version }}
FROM alpine:${ALPINE_VERSION}

# Metadata
LABEL maintainer="{{ author | default('Container Template Engine') }}"
LABEL version="{{ template_version }}"
LABEL description="{{ description | default('Alpine Linux base container') }}"
LABEL org.opencontainers.image.title="{{ template_name }}"
LABEL org.opencontainers.image.description="{{ description | default('Alpine Linux base container') }}"
LABEL org.opencontainers.image.version="{{ template_version }}"
LABEL org.opencontainers.image.created="{{ generated_at }}"

# Build arguments
ARG TARGETPLATFORM
ARG TARGETARCH
ARG BUILDPLATFORM
ARG USER_NAME={{ user_name }}
ARG USER_UID={{ user_uid }}
ARG TIMEZONE={{ timezone }}

# Install security updates and base packages
RUN set -eux; \
    # Update package index
    apk update; \
    {% if enable_security_updates -%}
    # Install security updates
    apk upgrade; \
    {% endif -%}
    # Install base packages
    apk add --no-cache \
        {% for package in packages -%}
        {{ package }} \
        {% endfor -%}
        tzdata \
        shadow \
        sudo; \
    # Set timezone
    cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime; \
    echo "${TIMEZONE}" > /etc/timezone; \
    # Create non-root user
    addgroup -g ${USER_UID} ${USER_NAME}; \
    adduser -D -u ${USER_UID} -G ${USER_NAME} -s /bin/sh ${USER_NAME}; \
    # Configure sudo
    echo "${USER_NAME} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/${USER_NAME}; \
    # Clean up
    rm -rf /var/cache/apk/*; \
    rm -rf /tmp/*

# Security hardening
RUN set -eux; \
    # Remove unnecessary packages
    apk del shadow; \
    # Set secure permissions
    chmod 440 /etc/sudoers.d/${USER_NAME}; \
    # Remove shell history
    rm -f /root/.ash_history; \
    # Set secure umask
    echo "umask 027" >> /etc/profile

# Copy entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER ${USER_NAME}
WORKDIR /home/${USER_NAME}

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD {{ health_check | default('true') }}

# Set environment variables
ENV TZ=${TIMEZONE}
ENV USER=${USER_NAME}
ENV HOME=/home/${USER_NAME}

# Default entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["sh"]
