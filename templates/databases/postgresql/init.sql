-- PostgreSQL Initialization Script
-- Generated by Container Template Engine at {{ generated_at }}

-- Create application database if it doesn't exist
SELECT 'CREATE DATABASE {{ postgres_db }}'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '{{ postgres_db }}');

-- Create application user if it doesn't exist
DO $$
BEGIN
   IF NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = '{{ postgres_user }}') THEN
      CREATE USER {{ postgres_user }} WITH PASSWORD '{{ postgres_password }}';
   END IF;
END
$$;

-- Grant privileges to application user
GRANT ALL PRIVILEGES ON DATABASE {{ postgres_db }} TO {{ postgres_user }};

-- Connect to the application database
\c {{ postgres_db }}

-- Create extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
CREATE EXTENSION IF NOT EXISTS "pg_trgm";

-- Create a sample table for testing
CREATE TABLE IF NOT EXISTS health_check (
    id SERIAL PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status TEXT DEFAULT 'healthy'
);

-- Insert initial health check record
INSERT INTO health_check (status) VALUES ('initialized');

-- Grant table permissions to application user
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO {{ postgres_user }};
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO {{ postgres_user }};
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO {{ postgres_user }};

-- Set default privileges for future objects
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO {{ postgres_user }};
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO {{ postgres_user }};
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON FUNCTIONS TO {{ postgres_user }};

-- Create a read-only user for monitoring
DO $$
BEGIN
   IF NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = 'monitor') THEN
      CREATE USER monitor WITH PASSWORD 'monitor_password_change_me';
   END IF;
END
$$;

-- Grant limited privileges to monitor user
GRANT CONNECT ON DATABASE {{ postgres_db }} TO monitor;
GRANT USAGE ON SCHEMA public TO monitor;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO monitor;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO monitor;

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_health_check_timestamp ON health_check(timestamp);

-- Display completion message
\echo 'Database {{ postgres_db }} initialized successfully!'
\echo 'Application user: {{ postgres_user }}'
\echo 'Monitor user: monitor'
\echo 'Extensions installed: uuid-ossp, pg_stat_statements, pg_trgm'
