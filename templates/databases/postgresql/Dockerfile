# syntax=docker/dockerfile:1.17.1@sha256:38387523653efa0039f8e1c89bb74a30504e76ee9f565e25c9a09841f9427b05
# PostgreSQL Database Template
# Generated by Container Template Engine at {{ generated_at }}

ARG POSTGRES_VERSION={{ postgres_version }}
FROM postgres:${POSTGRES_VERSION}-alpine

# Metadata
LABEL maintainer="{{ author | default('Container Template Engine') }}"
LABEL version="{{ template_version }}"
LABEL description="{{ description | default('PostgreSQL database server') }}"
LABEL org.opencontainers.image.title="{{ template_name }}"
LABEL org.opencontainers.image.description="{{ description | default('PostgreSQL database server') }}"
LABEL org.opencontainers.image.version="{{ template_version }}"
LABEL org.opencontainers.image.created="{{ generated_at }}"

# Build arguments
ARG POSTGRES_DB={{ postgres_db }}
ARG POSTGRES_USER={{ postgres_user }}
ARG POSTGRES_PASSWORD={{ postgres_password }}

# Install additional tools and security updates
RUN set -eux; \
    apk update; \
    apk upgrade; \
    apk add --no-cache \
        curl \
        wget \
        ca-certificates \
        bash \
        {% if backup_enabled -%}
        postgresql-contrib \
        {% endif -%}
        tzdata; \
    rm -rf /var/cache/apk/*; \
    rm -rf /tmp/*

# Create necessary directories
RUN mkdir -p /var/lib/postgresql/backups \
    && mkdir -p /docker-entrypoint-initdb.d \
    && mkdir -p /etc/postgresql \
    && chown -R postgres:postgres /var/lib/postgresql/backups

# Copy configuration files
COPY postgresql.conf /etc/postgresql/postgresql.conf
COPY pg_hba.conf /etc/postgresql/pg_hba.conf

# Copy initialization scripts
COPY init.sql /docker-entrypoint-initdb.d/01-init.sql

# Copy utility scripts
COPY healthcheck.sh /usr/local/bin/healthcheck.sh
{% if backup_enabled -%}
COPY backup.sh /usr/local/bin/backup.sh
COPY restore.sh /usr/local/bin/restore.sh
{% endif %}

# Make scripts executable
RUN chmod +x /usr/local/bin/healthcheck.sh
{% if backup_enabled -%}
RUN chmod +x /usr/local/bin/backup.sh \
    && chmod +x /usr/local/bin/restore.sh
{% endif %}

# Set environment variables
ENV POSTGRES_DB=${POSTGRES_DB}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV PGDATA=/var/lib/postgresql/data/pgdata

# Configure PostgreSQL
ENV POSTGRES_INITDB_ARGS="--auth-host=scram-sha-256 --auth-local=peer"

# Security: Run as postgres user
USER postgres

# Expose PostgreSQL port
EXPOSE 5432

# Add health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Volume for data persistence
VOLUME ["/var/lib/postgresql/data", "/var/lib/postgresql/backups"]

# Use custom entrypoint if needed
# ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]

# Default command
CMD ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
