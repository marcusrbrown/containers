#!/bin/bash
# PostgreSQL Health Check Script
# Generated by Container Template Engine at {{ generated_at }}

set -e

# Configuration
POSTGRES_USER="${POSTGRES_USER:-{{ postgres_user }}}"
POSTGRES_DB="${POSTGRES_DB:-{{ postgres_db }}}"
MAX_RETRIES=3
RETRY_COUNT=0

# Function to check PostgreSQL connectivity
check_postgres() {
    pg_isready -h localhost -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -q
    return $?
}

# Function to check database query
check_query() {
    psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -t -c "SELECT 1" > /dev/null 2>&1
    return $?
}

# Function to check for locks
check_locks() {
    local lock_count
    lock_count=$(psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -t -c "SELECT COUNT(*) FROM pg_locks WHERE mode = 'ExclusiveLock'" 2>/dev/null | xargs)

    if [ "$lock_count" -gt 10 ]; then
        echo "WARNING: High number of exclusive locks detected: $lock_count"
        return 1
    fi
    return 0
}

# Main health check
main() {
    while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
        if check_postgres; then
            if check_query; then
                if check_locks; then
                    echo "PostgreSQL is healthy"
                    exit 0
                else
                    echo "PostgreSQL has performance issues (locks)"
                    exit 1
                fi
            else
                echo "PostgreSQL connection failed (query test)"
                RETRY_COUNT=$((RETRY_COUNT + 1))
                sleep 1
            fi
        else
            echo "PostgreSQL is not ready (attempt $((RETRY_COUNT + 1))/$MAX_RETRIES)"
            RETRY_COUNT=$((RETRY_COUNT + 1))
            sleep 2
        fi
    done

    echo "PostgreSQL health check failed after $MAX_RETRIES attempts"
    exit 1
}

main "$@"
