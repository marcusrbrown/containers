name: Build and Publish Multi-Architecture Containers

on:
  push:
    paths:
      - '**/Dockerfile'
      - 'scripts/**'
    branches:
      - main
  pull_request:
    paths:
      - '**/Dockerfile'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build for'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: string
      push_images:
        description: 'Push images to registry'
        required: false
        default: true
        type: boolean

env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io

jobs:
  detect-changes:
    name: Detect Changed Containers
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect.outputs.matrix }}
      has_changes: ${{ steps.detect.outputs.has_changes }}
      has_dockerhub: ${{ steps.detect.outputs.has_dockerhub }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Detect changed containers
        id: detect
        run: |
          # Get list of changed Dockerfile paths
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual runs, build all containers
            changed_files=$(find . -name "Dockerfile" -type f | grep -E "(parity|containers)/" | head -10)
          else
            # For push/PR, detect changed files
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              changed_files=$(git diff --name-only origin/${{ github.base_ref }}..HEAD | grep "Dockerfile$" || true)
            else
              changed_files=$(git diff --name-only HEAD~1..HEAD | grep "Dockerfile$" || true)
            fi
          fi

          if [ -z "$changed_files" ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Generate matrix for changed containers
          matrix_include=""
          for dockerfile in $changed_files; do
            container_dir=$(dirname "$dockerfile")
            container_name=$(basename "$container_dir")
            parent_dir=$(basename "$(dirname "$container_dir")")

            # Create a unique identifier for the container
            if [ "$parent_dir" != "." ]; then
              image_name="${parent_dir}-${container_name}"
            else
              image_name="$container_name"
            fi

            if [ -n "$matrix_include" ]; then
              matrix_include="$matrix_include,"
            fi
            matrix_include="$matrix_include{\"dockerfile\":\"$dockerfile\",\"context\":\"$container_dir\",\"image\":\"$image_name\",\"name\":\"$container_name\",\"category\":\"$parent_dir\"}"
          done

          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "has_dockerhub=${{ secrets.DOCKERHUB_USERNAME != '' }}" # Check if Docker Hub credentials are set
          echo "matrix={\"include\":[$matrix_include]}" >> $GITHUB_OUTPUT

  build-multiarch:
    name: Build Multi-Arch Container
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0
        with:
          driver-opts: |
            network=host
          buildkitd-flags: --debug

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && needs.detect-changes.outputs.has_dockerhub == 'true'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ github.repository_owner }}/${{ matrix.image }}
            ${{ secrets.DOCKERHUB_USERNAME != '' && format('{0}/{1}/{2}', env.REGISTRY_DOCKERHUB, secrets.DOCKERHUB_USERNAME, matrix.image) || '' }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}},enable={{is_default_branch}}

      - name: Build and push multi-arch container
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: ${{ (github.event_name != 'pull_request') && (inputs.push_images != false) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          provenance: false

      - name: Generate build summary
        if: always()
        run: |
          echo "## Multi-Architecture Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Container | ${{ matrix.image }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Context | ${{ matrix.context }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Platforms | ${{ inputs.platforms || 'linux/amd64,linux/arm64' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Push | ${{ (github.event_name != 'pull_request') && (inputs.push_images != false) }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tags Generated" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
